{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"bimdo Wiki","text":"<p>Willkommen im offiziellen Wiki von bimdo.ch! Alles was du brauchst um mit BIM durchzustarten und bimdoer zu werden.</p>"},{"location":"#introduction","title":"Introduction","text":""},{"location":"#hilfreiche-ressourcen","title":"Hilfreiche Ressourcen","text":"<p>YouTube:   Schau dir unseren YouTube-Kanal an, um regelm\u00e4\u00dfig Videos, Tutorials und Einblicke zu erhalten.  </p> <p>bimdo.ch   Erfahre mehr \u00fcber uns und unsere Projekte auf unserer Website.  </p> <p>bimdoer:   Nutze den vollen Umfang f\u00fcr dein ganzes Team direkt auf der bimdoer-Plattform.  </p> <p>LinkedIn:   Vernetze dich mit mir auf LinkedIn f\u00fcr berufliche Neuigkeiten und Kontakte.  </p> <p>GitHub:   Finde uns auf GitHub und arbeite direkt mit am opensource-Code.</p>"},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1000_einfuehrung-in-gdl/","title":"Einf\u00fchrung in GDL","text":"","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1000_einfuehrung-in-gdl/#gdl-in-archicad","title":"GDL in Archicad","text":"<p>In diesem Beitrag werden h\u00e4ufig gestellte Fragen rund um die Geometric Description Language (GDL) beantwortet \u2013 der Skriptsprache, die ArchiCAD zur Erstellung parametrischer Objekte nutzt. Wir erkl\u00e4ren dir, was GDL ist, warum es sich lohnt, GDL zu lernen, und wie du deine ersten Schritte in der GDL-Welt machst.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1000_einfuehrung-in-gdl/#was-ist-gdl","title":"Was ist GDL?","text":"<p>GDL (Geometric Description Language) ist die Skriptsprache, mit der ArchiCAD-Bibliotheken parametrische Objekte definieren. Anders als ein simples \"Hello World\" liefert GDL bereits nach wenigen Codezeilen praxisnahe Ergebnisse. Dabei werden komplexe Werkzeuge wie Fenster oder T\u00fcren nicht als statische Elemente, sondern als dynamische, skriptbasierte Objekte erstellt. GDL wird in ArchiCAD in sogenannten LCF-Containern (mit dem GSM-Dateiformat) verpackt.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1000_einfuehrung-in-gdl/#vorteile-von-gdl","title":"Vorteile von GDL","text":"<ul> <li>Schneller Einstieg: Bereits einfache Skripte zeigen visuelle Ergebnisse, was motivierend wirkt.  </li> <li>Parametrik verstehen: Mit GDL erh\u00e4ltst du ein grundlegendes Verst\u00e4ndnis f\u00fcr parametrische Modellierung in CAD-Software.  </li> <li>Praxisnahe Anwendungen: Du kannst t\u00e4gliche Arbeitsabl\u00e4ufe optimieren, da viele Objekte und Werkzeuge in ArchiCAD auf GDL basieren.  </li> <li>Visuelles Scripten: Neuere Tools wie Param-O erm\u00f6glichen ein visuelles Herangehen, wodurch der Einstieg erleichtert wird.</li> </ul>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1000_einfuehrung-in-gdl/#erste-schritte-in-gdl","title":"Erste Schritte in GDL","text":"<p>Ein guter Startpunkt ist es, sich auf ein einfaches 2D- und 3D-Skript zu konzentrieren. In der Schweizer Version von ArchiCAD findest du den GDL-Editor unter Ablage \u2192 GDL-Objekte \u2192 GDL-Objekte erstellen.   </p> <ul> <li>Tipp: Beschr\u00e4nke dich anfangs auf grundlegende Befehle, etwa das Erzeugen eines Quaders mit dem Befehl <code>block</code>.  </li> <li>Visualisierung: Nutze die 2D- und 3D-Ansicht, um die Auswirkungen deines Skripts unmittelbar zu \u00fcberpr\u00fcfen. </li> </ul> <p>docs\\assets\\images\\ac210-1000_02_Referenzhandbuch.png</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1000_einfuehrung-in-gdl/#nutzliche-ressourcen","title":"N\u00fctzliche Ressourcen","text":"<ul> <li>Das GDL Referenzhandbuch bietet eine umfangreiche \u00dcbersicht der Befehle. </li> <li>Seiten wie SelfGDL.de und das GDL-Kochbuch von David Nicholson-Cole liefern praxisnahe Beispiele.</li> </ul> <p>Weitere Ressourcen:  Hier eine Zusammenstellung hilfreicher Plattformen, auf denen du bereits fertige GDL-Elemente und weiterf\u00fchrende Informationen findest:   </p> <ul> <li>idc.ch </li> <li>bimobject.com </li> <li>bimcomponents.com </li> <li>cadswift.com.au </li> <li>arroway-textures.ch </li> <li>mtextur.com </li> <li>bimbakery.co </li> <li>turbosquid.com </li> <li>b-prisma.de </li> <li>concepsysbim.com </li> <li>prodlib.com </li> <li>3dwarehouse.sketchup.com </li> <li>archive3d.net </li> <li>velux.at </li> <li>eptar.hu </li> <li>poliigon.com </li> </ul> <p>Zus\u00e4tzlich ist der Austausch in Foren (wie dem ArchiCAD-Talk) hilfreich, um von den Erfahrungen anderer Nutzer zu profitieren.</p> <p>Ver\u00f6ffentlicht am: 2025-03-15 | Code: ac210-100  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: Archicad, GDL</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/","title":"Dein erstes GDL","text":"","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#allgemeine-tipps","title":"Allgemeine Tipps","text":"<p>Bevor du mit deinem ersten Skript beginnst, hier einige hilfreiche Tipps:</p> <ol> <li>Ideen skizzieren: Halte deine Ideen kurz fest, um wichtige Parameter zu identifizieren.</li> <li>Anforderungen definieren: Unterteile die Anforderungen in grundlegende Funktionen und \"nice to have\"-Funktionen.</li> <li> <p>Prototyping: Experimentiere mit verschiedenen Ans\u00e4tzen, um L\u00f6sungswege zu finden. Prototyping kann dir helfen, deine Ideen zu testen und zu verfeinern.</p> </li> <li> <p>Strukturierung des Skripts: Kommentiere dein Skript und verwende \u00dcberschriften, um die Lesbarkeit zu verbessern. Ein klar strukturierter Code erleichtert die Zusammenarbeit im Team.</p> </li> </ol> <pre><code>!Beginne dein Script mit ein paar Infos\n    !Objekttitel\n    !Datum\n    !Dein Name\n    !Script-Name z.B. 3D-Script\n\nStrukturiere\n    deine\n        Arbeit\n    mit\nTabstops.\n\n\"G R O S S  &amp; klein\" dient nur der besseren \u00dcbersicht\n    &gt;&gt;Graphisoft scriptet fast alles klein\n    &gt;&gt;GDL-Kochbuch empfiehlt Befehle   \"GROSS\"\n                             Attribute \"klein\"\n\nEND !--------------- Beende dein Script mit END.\n</code></pre>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#strukturierung-script","title":"Strukturierung Script","text":"<ul> <li>Kommentiere das Skript mit <code>!</code> und f\u00fcge \u00dcberschriften hinzu.</li> <li>Verwende Tabstops f\u00fcr eine klare Struktur.</li> <li>Nutze Gro\u00dfbuchstaben f\u00fcr Befehle und Kleinbuchstaben f\u00fcr Attribute.</li> <li>Setze Subroutinen ein, um komplexe Skripte zu organisieren.</li> <li>Beende jedes Skript mit dem <code>END</code>-Befehl.</li> <li>Erstelle ein neues GDL und \u00fcberpr\u00fcfe das Ergebnis in der 3D-Ansicht.</li> <li>Weitere Informationen findest du im Graphisoft GDL Style Guide.</li> </ul>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#erstellung-gdl","title":"Erstellung GDL","text":"","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#3d-script","title":"3D-Script","text":"<p>1. Neues GDL erstellen:</p> <ul> <li>\u00d6ffne ArchiCAD und gehe zum Men\u00fc \"Ablage\".</li> <li>W\u00e4hle \"Neu\" und dann \"GDL-Objekt\", um ein neues GDL-Skript zu erstellen.</li> </ul> <p>2. Block-Skript einf\u00fcgen:</p> <ul> <li>\u00d6ffne den 3D-Skript-Editor in deinem neuen GDL-Objekt.</li> <li>Kopiere und f\u00fcge das folgende Block-Skript in den Editor ein.</li> </ul> <p>3. Pr\u00fcfe das Ergebnis:</p> <ul> <li>\u00d6ffne die 3D-Ansicht auf der linken Seite.</li> </ul> <pre><code>\n!Bock auf Block\n!20210903\n!Manuel Emmenegger\n!3D-Script\n\nblock 1,2,3\n\nend !Ende des Scripts\n    </code></pre> <p>4. Pr\u00fcfe das Ergebnis:</p> <ul> <li>Nach dem Befehl stehen die Eingaben 1,2,3, welche f\u00fcr x,y,z stehen. Spiele nun etwas mit diesen Werten und kontrolliere das Ergebnis in der 3D-Ansicht. Weitere Informationen zu diesem Befehl findest du unter selfgdl.de.</li> </ul>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#2d-script","title":"2D-Script","text":"<p>Im n\u00e4chsten Schritt \u00fcberarbeiten wir die 2D-Darstellung. \u00d6ffne das 2D-Script und erg\u00e4nze die entsprechenden Zeilen, um eine automatische Projektion vom 3D-Script zu erzeugen. Verwende den Befehl nur zur Kontrolle, da er bei komplexer Geometrie den Grundrissaufbau verlangsamen kann. Weitere Informationen findest du auf selfgdl.de.</p> <pre><code>\n!Bock auf Block\n!20210903\n!Manuel Emmenegger\n!2D-Script\n\nproject2 3,270,1\n\nend !Ende des Scripts\n    </code></pre>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#speichern","title":"Speichern","text":"<p>Speichere dein erstes GDL in der eingebetteten Bibliothek \u00fcber \"Ablage/sichern\" und speichere die ArchiCAD-Datei als .pln, um das GDL zu integrieren.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#3d-parameter","title":"3D Parameter","text":"","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#geometrie","title":"Geometrie","text":"<p>Nun geht es darum, dieses Element zu parametrisieren. Wir beginnen mit einigen Standardparametern. \u00d6ffne in unserem bereits erstellten Element das Register \"Parameter\" auf der linken Seite. Hier sollten drei Standardparameter vorhanden sein: Parameter A f\u00fcr die X-Achse, Parameter B f\u00fcr die Y-Achse und Parameter ZZYZX f\u00fcr die Z-Achse.</p> <p>Ersetze die Zahlen im Script durch die Standardparameter A, B und ZZYZX und \u00fcberpr\u00fcfe die \u00c4nderungen in der 3D-Ansicht. Diese Parameter beeinflussen auch die 2D-Ansicht dank des \"project2\"-Befehls.</p> <p>Speichere das Element, schlie\u00dfe den GDL-Editor und platziere das Element mit dem Objekt-Werkzeug.</p> <pre><code>!Bock auf Block\n!20210903\n!Manuel Emmenegger\n!3D-Script\n\nblock A,B,ZZYZX\n\nend !Ende des Scripts\n</code></pre> <p>Dr\u00fccke \"T\", um die Objekteinstellungen zu \u00f6ffnen, wo du die Parameter A, B und ZZYZX findest. Dein parametrisiertes GDL-Objekt ist nun erstellt. </p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#darstellung","title":"Darstellung","text":"<p>Um weitere Parameter zu erkunden, w\u00e4hle das GDL-Objekt aus und dr\u00fccke Strg+Shift+O.</p> <p>Erstelle zwei neue Parameter im Register \"Parameter\". F\u00fcr die Namensgebung empfiehlt sich ein konsistentes Konzept, eventuell basierend auf dem Graphisoft Standard. L\u00e4ngere Namen sind hilfreich, um die Parameter direkt zu erkennen, ohne eine Legende zu ben\u00f6tigen.</p> <p></p> <p>Die Parameter-Tabelle enth\u00e4lt folgende wichtige Spalten:</p> <ul> <li>Display: Steuert die Darstellung im Interface (z.B. fett, ausgeblendet)</li> <li>Variable: Name der Variable f\u00fcr das Script</li> <li>Typ: Art der Variable (z.B. Stift, Oberfl\u00e4che)</li> <li>Name: Angezeigter Name f\u00fcr den Benutzer</li> <li>Wert: Standardwert des Parameters</li> </ul> <p>Weitere Details zu den Parametertypen findest du in der Dokumentation.</p> <p>Erg\u00e4nzen wir nun die Befehle \"pen\" f\u00fcr den Konturstift und \"set material\" f\u00fcr die Oberfl\u00e4che im Script. Speichere anschlie\u00dfend das Element und pr\u00fcfe das Ergebnis.</p> <pre><code>!Bock auf Block\n!20210903\n!Manuel Emmenegger\n!3D-Script\n\npen            penContour3D\nset material   matCover\n\nblock A,B,ZZYZX\n\nend !Ende des Scripts\n</code></pre>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#individuelles-2d-script","title":"Individuelles 2D-Script","text":"","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#2d-parameter","title":"2D Parameter","text":"<p>Nun wollen wir uns die zweidimensionale Darstellung von unserem Block etwas genauer anschauen. Dazu besch\u00e4ftigen wir uns mit den Befehlen line2 und rect2 sowie den Attributen pen und set line_type.</p> <p>Ein separates 2D-Script bietet zwei wichtige Vorteile:</p> <ol> <li> <p>Bei komplexen 3D-Elementen ist die Grundrissdarstellung schneller, da nicht alles projiziert werden muss.</p> </li> <li> <p>Grundrisse verwenden oft Symbole statt reiner Projektionen, z.B. bei Steckdosen und Schaltern.</p> </li> </ol> <p>Um die project2-Linien von unseren eigenen unterscheiden zu k\u00f6nnen, erstellen wir zun\u00e4chst neue Parameter wie im Screenshot gezeigt. </p> <p>Die Befehle \"pen\" und \"line_type\" werden nach project2 eingef\u00fcgt, sodass die project2-Linien mit Stift 1 und Linientyp 1 gezeichnet werden und alle weiteren Linien die neuen Attribute erhalten.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#line2","title":"line2","text":"<p>Mit dem Befehl line2 zeichnen wir die vier Linien unseres Blocks von oben gesehen. Der Befehl verwendet zwei Koordinatenpaare (x1,y1,x2,y2) und zieht eine Linie zwischen diesen Punkten. Die vier Linien bilden ein Rechteck, das in der 2D-Ansicht kongruent zur project2-Darstellung sein sollte.</p> <pre><code>!Bock auf Block\n!20210903\n!Manuel Emmenegger\n!2D-Script\n\nproject2 3,270,1\n\npen            penContour2D\nset line_type  ltContour2D\n   !line2 x1,y1,x2,y2\n    line2 0,0,A,0\n    line2 A,0,A,B\n    line2 A,B,B,0\n    line2 0,B,0,0\n\nend !Ende des Scripts\n</code></pre>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#rect2","title":"rect2","text":"<p>Der Befehl rect2 erm\u00f6glicht es, die vier Linien durch eine einzige Rechteck-Definition zu ersetzen. Dabei wird ein Rechteck zwischen zwei Punkten (x1,y1) und (x2,y2) aufgezogen.</p> <pre><code>!rect2 x1,y1,x2,y2\n rect2 0,0,A,B\n</code></pre> <p>Wie du sicherlich bemerkt hast, funktionieren die beiden Befehle \u201eline2\" und \u201erect2\" nicht gleich wie der Befehl \u201eblock\". Beim Befehl \"block\" konnten wir n\u00e4mlich den Startpunkt des Blocks, also den Objektursprung (Startpunkt im Raum), nicht bestimmen, wir starteten automatisch immer beim Punkt 0,0,0. Mit dem Befehl \"add\" l\u00e4sst sich diese Einschr\u00e4nkung sp\u00e4ter umgehen. Die 2D-Befehle bieten hier also mehr Flexibilit\u00e4t bei der Positionierung der Elemente.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#poly2","title":"poly2","text":"<p>Nachdem wir die Linienwerkzeuge kennengelernt haben, wollen wir nun mit dem Befehl \"poly2\" Schraffuren erstellen. Daf\u00fcr ben\u00f6tigen wir auch den Befehl \"set fill\" zur Steuerung des Schraffurtyps.</p> <p>Erstelle die Parameter wie im Screenshot gezeigt und erg\u00e4nze den Schraffurtyp im Script nach den Stift- und Linientyp-Definitionen.</p> <p></p> <p>Ersetze den rect2-Befehl durch poly2 und f\u00fcge die Anzahl Ecken (4) sowie die Darstellungsart (1+2+4+0) vor den xy-Werten ein. Die Punkte entsprechen den gleichen Endpunkten wie bei line2.</p> <p>Der Befehl \u201epoly2\" unterscheidet sich von \u201erect2\" durch:</p> <ul> <li>Variable Anzahl Ecken</li> <li>Schraffur- oder Konturdarstellung </li> <li>M\u00f6glichkeit offener Polygone</li> </ul> <pre><code>!Bock auf Block\n!20210903\n!Manuel Emmenegger\n!2D-Script\n\nproject2 3,270,1\n\npen            penContour2D\nset line_type  ltContour2D\nset fill       fillType2D\n   !poly2 n,Konturf\u00fcllung,\n   !      x1,y1,\n   !      ..\n   !      Xn,yn\n    poly2 4,1+2+4+0,\n          0,0,\n          A,0,\n          A,B,\n          0,B\n\nend !Ende des Scripts\n</code></pre>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#poly2_","title":"poly2_","text":"<p>Der poly2_ Befehl bietet erweiterte Steuerungsm\u00f6glichkeiten f\u00fcr Kanten und Stifte. Wir beginnen mit poly2_, bei dem jeder xy-Wert einen Status erh\u00e4lt: 1 f\u00fcr sichtbare Linien, -1 f\u00fcr Polygonzug-Endpunkte. Details zum Status findest du auf selfgdl.de.</p> <pre><code>!poly2_ n,Konturf\u00fcllung,\n!       x1,y1,Status,\n!       ..\n!       x2,y2,Status\n poly2_ 4,1+2+4+0,\n        0,0,1,\n        A,0,1,\n        A,B,1,\n        0,B,1\n</code></pre>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#poly2_a","title":"poly2_A","text":"<p>Mit poly2_A steuern wir den Vordergrundstift der Schraffur - ideal f\u00fcr massive Schraffuren.</p> <pre><code>!poly2_A n,Konturf\u00fcll,Schraffurstift,\n!        x1,y1,Status,\n!        ..\n!        x2,y2,Status\n poly2_A 4,1+2+4+0,penFront2D,\n         0,0,1,\n         A,0,1,\n         A,B,1,\n         0,B,1\n</code></pre>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1010_dein-erstes-gdl/#poly2_b","title":"poly2_B","text":"<p>Der Befehl poly2_B bietet die umfangreichsten Steuerungsm\u00f6glichkeiten, da sowohl Vorder- als auch Hintergrundstift definiert werden k\u00f6nnen. Nach dem Speichern und Platzieren des Elements im Grundriss k\u00f6nnen alle erstellten Parameter getestet werden.</p> <pre><code>!poly2_B n,Konturf\u00fcll,Schraffurstift,\n!        Hintergrundstift,\n!        x1,y1,Status,\n!        ..\n!        x2,y2,Status\n poly2_B 4,1+2+4+0,penFront2D,\n         penBack2D,\n         0,0,1,\n         A,0,1,\n         A,B,1,\n         0,B,1\n</code></pre> <p>Ver\u00f6ffentlicht am: 2025-03-15 | Code: ac210-101  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: Archicad, GDL</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1050_erstelle-einen%20tisch/","title":"Erstelle einen Tisch","text":"","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1050_erstelle-einen%20tisch/#befehl-add","title":"Befehl add","text":"<p>In diesem ersten Video einer sechsteiligen Serie lernen wir den GDL-Befehl \"add\" kennen. Wir erstellen damit einen einfachen parametrischen Tisch als Grundlage f\u00fcr die weiteren Videos. Die Serie vermittelt die Grundlagen, um eigene GDL-Elemente zu erstellen.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1050_erstelle-einen%20tisch/#parameter-a-b-zzyzx","title":"Parameter A, B, ZZYZX","text":"<p>Im zweiten Video der Serie lernen wir die Parameter A, B und ZZYZX kennen. Wir erweitern unseren Tisch aus dem ersten Video mit den Standardparametern von Archicad, um ihn flexibel anpassen zu k\u00f6nnen. Mit den Befehlen block &amp; add sowie dem Grundwissen der Parametrik kannst du nach diesem Video dein eigenes parametrisches Element erstellen.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1050_erstelle-einen%20tisch/#guid","title":"GUID","text":"<p>In diesem Video lernen wir die GUID (Global Unique Identifier) mit Main-ID und Revision-ID kennen.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1050_erstelle-einen%20tisch/#individuelle-parameter","title":"Individuelle Parameter","text":"<p>In diesem Video lernen wir, wie wir individuelle Parameter f\u00fcr unser GDL-Element erstellen k\u00f6nnen. Statt nur die Standardparameter A, B und ZZYZX zu verwenden, k\u00f6nnen wir eigene Parameter mit aussagekr\u00e4ftigen Namen definieren. Dies macht das Element nicht nur benutzerfreundlicher, sondern erm\u00f6glicht auch eine bessere Organisation der Parameterwerte. Wir erweitern unseren Tisch um Parameter wie \"Tischplattenh\u00f6he\", \"Beinbreite\" und andere spezifische Masse, die direkt im Parameter-Dialog angepasst werden k\u00f6nnen.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1050_erstelle-einen%20tisch/#2d-script","title":"2D-Script","text":"<p>In diesem Video lernen wir das 2D-Script kennen. Durch die direkte Definition der 2D-Darstellung vermeiden wir die automatische Projektion aus dem 3D-Script und k\u00f6nnen die konzeptionelle Darstellung besser steuern.</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.1%20Library/ac210-1050_erstelle-einen%20tisch/#darstellung","title":"Darstellung","text":"<p>In diesem Video lernen wir die grafischen Parameter kennen. Wir machen Oberfl\u00e4chen, Linientypen und Stiftfarben als Parameter verf\u00fcgbar und schliessen damit unser parametrisches Element ab.</p> <p>Ver\u00f6ffentlicht am: 2025-03-15 | Code: ac210-105  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: Archicad, GDL</p>","tags":["Archicad","GDL"]},{"location":"Archicad/2%20Foundation/2.7%20Ifc%20Translator/ac270-1000_stair-ifc-export/","title":"Ifc Treppe Rohbau","text":"<p>Beim Austausch mit dem Bauingenieur ist es wichtig, das Architekturmodell auf die tragenden Elemente und Betonarbeiten zu reduzieren. ArchiCAD bietet daf\u00fcr die Strukturdarstellung, mit der sich die Kerne der tragenden Elemente isoliert darstellen lassen. W\u00e4hrend dies bei den meisten Elementen automatisch funktioniert und nicht-tragende Schichten ausblendet, erfordert die Treppe aktuell noch einige Tricks. In diesem Video zeige ich dir die verschiedenen M\u00f6glichkeiten f\u00fcr die korrekte IFC-Darstellung von Treppen.</p> <p>Ver\u00f6ffentlicht am: 2022-07-26 | Code: ac270-100  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: Archicad, Bimcollab, Bimcollab-Zoom, Ifc, Ifc-Schema, IfcPlate, IfcStair, Smart-Views, Treppe</p>","tags":["Archicad","Bimcollab","Bimcollab-Zoom","Ifc","Ifc-Schema","IfcPlate","IfcStair","Smart-Views","Treppe"]},{"location":"Archicad/5%20Data/5.2%20lists%20%26%20schedules/ac521-1000_klammern-in-auswertungen/","title":"Klammern in Auswertungen","text":"<p>Klammern ( ) in Auswertungslisten sind m\u00e4chtige Werkzeuge, besonders in Kombination mit den logischen Operatoren \"und\" &amp; \"oder\". Die Regeln folgen den mathematischen Klammergesetzen - wer diese versteht, kann Auswertungslisten pr\u00e4zise und zuverl\u00e4ssig erstellen. Mit diesem Wissen werden deine Listen zu 100% korrekte Mengen liefern.</p> <p>Ver\u00f6ffentlicht am: 2022-08-02 | Code: ac521-100  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: Archicad, Auswertungen, Listen, Mengenermittlung</p>","tags":["Archicad","Auswertungen","Listen","Mengenermittlung"]},{"location":"Archicad/6%20Navigator/6.1%20Project%20Settings/ac611-1000_geschossbezeichnungen/","title":"Geschossbezeichnungen","text":"<p>Namenskonventionen ist wohl ein Thema mit ganz viel Diskussionsstoff und dies beginnt schon bei den Geschossbezeichnungen. Doch durchg\u00e4ngige Namenskonventionen und sinnvolle Geschossbezeichnungen sind die Grundlage f\u00fcr eine Automatisierung. Nat\u00fcrlich lassen sich auch die Namenskonventionen weitestgehend standardisieren und man muss nicht jedes File manuell umbenennen. Nat\u00fcrlich stehen wir aber immer im Konflikt mit internen und externen Konventionen und deren Abh\u00e4ngigkeit zueinander. In diesem Video schauen wir uns mal ein paar M\u00f6glichkeiten an und welche Zeichen du sicherlich vermeiden solltest.</p> <p>Ver\u00f6ffentlicht am: 2022-08-09 | Code: ac611-100  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: Archicad, BIM, Geschossstruktur, IFC, Namenskonventionen</p>","tags":["Archicad","BIM","Geschossstruktur","IFC","Namenskonventionen"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/","title":"Visuelle QS Ifc","text":"","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#export","title":"Export","text":"<p>Die Wahl des richtigen Werkzeugs in ArchiCAD ist entscheidend f\u00fcr einen erfolgreichen IFC-Export. W\u00e4hrend Standardwerkzeuge wie Wand, Decke und Dach mit klar definierten Parametern f\u00fcr L\u00e4nge, Breite und H\u00f6he arbeiten, verh\u00e4lt sich das Morph-Werkzeug eher wie eine digitale Knetmasse ohne feste Parameter. Im Folgenden zeige ich anhand von f\u00fcnf Testboxen, wie sich die verschiedenen Werkzeugeinstellungen auf den Export auswirken. Auch wenn die Beispiele ArchiCAD-spezifisch sind, verdeutlichen sie ein grundlegendes Prinzip: Die Wahl des Modellierungswerkzeugs hat direkten Einfluss auf die Exportqualit\u00e4t.</p> <p></p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#fehlermeldung-archicad","title":"Fehlermeldung Archicad","text":"<p>Fehlermeldungen beim Export sollten nicht einfach weggeklickt werden, sondern genau gepr\u00fcft werden. Auch wenn die Aussagekraft oft gering ist, geben sie wichtige Hinweise auf m\u00f6gliche Probleme. In diesem Fall fehlen f\u00fcnf Elemente beim Export - der Grund sind 0mm starke Elemente.</p> <p></p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#exportprotokoll-archicad","title":"Exportprotokoll Archicad","text":"<p>Das Exportprotokoll bietet einen detaillierten Einblick in den Exportvorgang. Neben den Berechnungszeiten f\u00fcr die einzelnen Prozessschritte zeigt es auch m\u00f6gliche Probleme wie korrupte Geometrien oder doppelte GUIDs auf - und das sogar ohne einen IFC-Export durchzuf\u00fchren.</p> <p>Bei unserem letzten Export wurden Probleme mit 5 von 21 Elementen festgestellt. Diese sind im unteren Bereich des Protokolls mit ihren eindeutigen GUIDs aufgelistet. Mit diesen Informationen k\u00f6nnen wir nun gezielt nach den betroffenen Elementen suchen und die Ursachen beheben.</p> <p></p> <p>Die manuelle Suche nach problematischen Elementen ist zeitaufw\u00e4ndig, weshalb eine saubere Modellierung von Anfang an wichtig ist. Mit dem Tool \"Suchen &amp; Aktivieren\" k\u00f6nnen in ArchiCAD die betroffenen Elemente anhand ihrer GUID schnell gefunden werden. \u00c4hnliche Suchfunktionen stehen auch in den meisten IFC-Viewern zur Verf\u00fcgung.</p> <p></p> <p>Weder der Allgemeine IFC-\u00dcbersetzer 2x3 noch das IFC-Schema 4 in ArchiCAD 25 k\u00f6nnen die markierten Elemente exportieren. Die L\u00f6sung liegt in den \u00dcbersetzer-Einstellungen: Mit aktiviertem \"Exakter Geometrieexport\" funktioniert der Export ohne Fehlermeldung. Aber Achtung diese Einstellung hat dann wiederum andere Auswirkungen.</p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#visuelle-prufung","title":"Visuelle Pr\u00fcfung","text":"","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#geometrie-prufung-archicad","title":"Geometrie-Pr\u00fcfung Archicad","text":"<p>Die visuelle Pr\u00fcfung ist essentiell, besonders bei Teilmodellen und Rohbauexporten. Folgende Elemente sind besonders fehleranf\u00e4llig und sollten genau gepr\u00fcft werden:</p> <ul> <li>\u00d6ffnungen (Fenster, T\u00fcren)</li> <li>Solid-Befehle (Gef\u00e4lle)</li> <li>Verschnitte (Wandecken, Geschoss\u00fcberg\u00e4nge) </li> <li>Umbau-Filter</li> <li>Schichteinz\u00fcge</li> </ul> <p></p> <p>Eine saubere 3D-Modellierung ist wichtiger als die 2D-Darstellung. Kritische Elemente sollten zu Projektbeginn gepr\u00fcft werden, danach gen\u00fcgen Stichproben. Fr\u00fchzeitige Pr\u00fcfungen erm\u00f6glichen es, die Arbeitsweise des Teams durch Favoriten, Templates und Schulungen zu optimieren.</p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#geschosse","title":"Geschosse","text":"<p>Bei den Geschossen kontrolliere ich immer deren Bezeichnung. Diese sollten: - Gleich viele Stellen haben (z.B. 08UG, 30OG statt 8UG, 10OG) - Durchg\u00e4ngig nummeriert sein - Die Zahl immer vorne haben - Keine negativen Zahlen f\u00fcr UGs verwenden (-2UG vermeiden) -  </p> <p>Dies ist wichtig f\u00fcr eine korrekte Sortierung. Hier einige Beispiele:</p> Variante 1 Unsortiert Sortiert AT04AT04 OG03EG00 OG02OG01 OG01OG02 EG00OG03 UG01UG01 UG02UG02 Variante 2 Unsortiert Sortiert 04AT00EG 03OG01OG 02OG01UG 01OG02OG 00EG02UG 01UG03OG 02UG04AT Variante 3 (Empfohlen) Unsortiert Sortiert 14AT14AT 13OG13OG 12OG12OG 11OG11OG 10EG10EG 09UG09UG 08UG08UG <p>Empfehlung: Starte die Nummerierung vom Erdgeschoss aus (z.B. 10EG). Dies erlaubt:</p> <ul> <li>Flexible Erweiterung nach oben und unten</li> <li>Logische Nummerierung (EG=10, 1.OG=11, 1.UG=09)</li> <li>Konsistente Sortierung in allen Programmen</li> </ul>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#ifc-entitaten","title":"IFC-Entit\u00e4ten","text":"<p>Die Kontrolle der IFC-Entit\u00e4ten sollte systematisch erfolgen:</p> <ol> <li> <p>Stichprobenartige Pr\u00fcfung der Property Sets (Psets):</p> <ul> <li>Sind alle erforderlichen Psets vorhanden?</li> <li>Enthalten die Psets die korrekten Informationen?</li> <li>Wurde z.B. die Information \"load bearing\" korrekt auf das Standardfeld \u00fcbertragen?</li> </ul> </li> <li> <p>Pr\u00fcfung in verschiedenen IFC-Viewern:</p> <ul> <li>IFC-Dateien k\u00f6nnen in unterschiedlichen Viewern verschieden interpretiert werden</li> <li>Besonders bei nicht-standardkonformen IFC-Entit\u00e4ten k\u00f6nnen Probleme auftreten</li> <li>Die Fehlerquelle liegt nicht immer beim Export selbst</li> </ul> </li> <li> <p>Standardeigenschaften:</p> <ul> <li>Wichtige Eigenschaften wie \"tragend/nicht tragend\" m\u00fcssen auf den definierten Standardfeldern liegen</li> <li>Nur so funktionieren automatisierte Pr\u00fcfroutinen zuverl\u00e4ssig</li> </ul> </li> </ol> <p></p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#effiziente-prufmethoden","title":"Effiziente Pr\u00fcfmethoden","text":"<p>BIMCollab Zoom:</p> <ul> <li>SmartViews erm\u00f6glichen das Filtern und Einf\u00e4rben von Modellinhalten</li> <li>Vergleichbar mit grafischen \u00dcberschreibungen in ArchiCAD</li> <li>Beispiel: Automatische Einf\u00e4rbung von Fenstern nach Typennummer</li> <li>Erm\u00f6glicht schnelle visuelle Kontrolle von Typen und deren Zuordnung</li> </ul> <p></p> <p>Solibri:</p> <ul> <li>Bietet umfangreiche Auswertungsm\u00f6glichkeiten</li> <li>Beispiel: Gruppierung und Einf\u00e4rbung von Fassadenpaneelen nach Gr\u00f6\u00dfe</li> <li>Verbessert das Verst\u00e4ndnis der Modellinformationen durch visuelle Darstellung</li> <li>Unterst\u00fctzt die Optimierung des Modells</li> </ul> <p></p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#datenbasiert-prufen","title":"Datenbasiert pr\u00fcfen","text":"","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#excel","title":"Excel","text":"<p>Excel bietet effiziente M\u00f6glichkeiten zur Pr\u00fcfung von Konventionen und Duplikaten, ohne dass spezielle Pr\u00fcfsoftware erforderlich ist:</p> <ul> <li>Unter \"Daten\" &gt; \"Daten\u00fcberpr\u00fcfung\" k\u00f6nnen einfache Validierungsregeln erstellt werden</li> <li>Tabellen lassen sich aus BIMCollab Zoom als CSV exportieren und in Excel analysieren</li> <li>Nach Anpassungen kann die Excel-Datei wieder in ArchiCAD importiert werden</li> </ul> <p>Beispiel f\u00fcr Pr\u00fcfungen:</p> <ul> <li>Spalte 1: Validierung von Namenskonventionen</li> <li>Spalte 2: Balkendiagramm zur Visualisierung der Rahmenbreiten  </li> <li>Spalte 3: Farbcodierte Kategorisierung der Rahmenh\u00f6hen</li> </ul> <p></p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"Archicad/7%20Check/ac640-1000_visuelle-qs-ifc/#powerbi","title":"PowerBI","text":"<p>PowerBI bietet umfangreiche M\u00f6glichkeiten zur Datenanalyse und Visualisierung. Mit interaktiven Dashboards k\u00f6nnen Datenabh\u00e4ngigkeiten anschaulich dargestellt werden, was eine neue Perspektive auf die Modellinformationen erm\u00f6glicht. Viele Tools verf\u00fcgen \u00fcber direkte PowerBI-Schnittstellen. Alternativ k\u00f6nnen CSV-Exporte verwendet werden, die bei konsistenter Speicherung unter dem gleichen Pfad das Dashboard automatisch aktualisieren.</p> <p>Ein praktisches Beispiel: Durch die Zusammenf\u00fchrung von etwa 50 IFC-Dateien verschiedener Projektst\u00e4nde in einem Modell und den Export als CSV-Bauteilliste, lassen sich Ver\u00e4nderungen wie Volumen\u00e4nderungen zwischen den Projektst\u00e4nden effizient vergleichen und analysieren. Dies erm\u00f6glicht eine transparente Dokumentation der Projektentwicklung und quantifizierbare Aussagen \u00fcber \u00c4nderungen in verschiedenen Projektphasen.</p> <p></p> <p>Ver\u00f6ffentlicht am: 2022-04-04 | Code: ac640-100  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: Archicad, Export, IFC, Qualitaetskontrolle</p>","tags":["Archicad","Export","IFC","Qualitaetskontrolle"]},{"location":"BIM/bi100-1000_bim-im-kontext-vdc/","title":"BIM im Kontext VDC","text":"<p>Dieses Video erl\u00e4utert die strategische Einordnung von BIM in den Bauprozess und zeigt dessen Vernetzung mit anderen Bereichen auf. Das VDC Framework (Virtual Design &amp; Construction) positioniert BIM als Bindeglied zwischen drei Kernaspekten:</p> <ul> <li>Integrale Zusammenarbeit der Projektbeteiligten</li> <li>Optimierte Prozesse und Arbeitsabl\u00e4ufe  </li> <li>Messbare Projekt- und Kundenziele</li> </ul> <p>Durch diese ganzheitliche Betrachtung k\u00f6nnen konkrete Mehrwerte \u00fcber den gesamten Projektzyklus nachgewiesen und quantifiziert werden.</p> <p>Ver\u00f6ffentlicht am: 2022-06-28 | Code: bi100-100  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: BIM, VDC</p>","tags":["BIM","VDC"]},{"location":"BIM/bi100-1001_4-bim-konzepte/","title":"4 BIM-Konzepte","text":"<p>BIM l\u00e4sst sich in verschiedene Kategorien einteilen, was gerade f\u00fcr Einsteiger oft verwirrend sein kann. Dieses Video erkl\u00e4rt die wichtigsten BIM-Konzepte verst\u00e4ndlich und praxisnah:</p> <ul> <li>littleBIM vs. bigBIM</li> <li>openBIM vs. closedBIM</li> </ul> <p>Die Unterschiede und Zusammenh\u00e4nge werden anhand konkreter Beispiele erl\u00e4utert.</p> <p>Ver\u00f6ffentlicht am: 2022-03-17 | Code: bi100-100  | Autor: Manuel Emmenegger | bimdo.ch</p> <p>Schlagw\u00f6rter: BigBIM, BIM, ClosedBIM, LittleBIM, OpenBIM</p>","tags":["BigBIM","BIM","ClosedBIM","LittleBIM","OpenBIM"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/","title":"Typisierung Bauphysik","text":"","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/#typisierung","title":"Typisierung","text":"<p>Die Typisierung von Geb\u00e4udeelementen ist ein zentraler Aspekt der BIM-Methodik. Dabei werden Bauteile mit \u00e4hnlichen oder identischen Anforderungen in logische Gruppen zusammengefasst. Diese systematische Kategorisierung erm\u00f6glicht es, das Geb\u00e4ude als strukturierte Datenbank zu verstehen und effizient zu verwalten.</p> <p>Das folgende Modell wurde auf Basis bestehender Typisierungskonzepte (z.B. von Pirmin Jung AG) und Projekterfahrungen entwickelt, um die Gruppierung anschaulich darzustellen. Die folgenden zwei Visualisierungen zeigen die unterschiedlichen Aspekte der Typisierung:</p>","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/#bimx-viewer","title":"BIMx Viewer","text":"<p>Im BIMx-Webviewer lassen sich beide Modelle detailliert untersuchen. Das Perimetermodell verwendet eine klare Farbcodierung:</p> <ul> <li>Rot: Perimeterbildende Elemente</li> <li>Blau: Elemente im Kaltbereich  </li> <li>Transparent: Elemente im warmen Innenbereich</li> </ul> <p>Das Typenmodell klassifiziert die einzelnen Bauteile entsprechend dem bauphysikalischen Bericht. Die Typisierung deckt die wichtigsten Standardf\u00e4lle ab, wobei komplexere Aufbauten wie Unterlagsb\u00f6den oder Flachd\u00e4cher gesondert behandelt werden m\u00fcssen. Ein Hauptziel ist das Vermitteln des grundlegenden Typisierungskonzepts.</p> <p>Verbesserungspotential besteht im Erdbereich: Aktuell existieren nur die Grundtypen WE (\"Wand gegen Erdreich\") und DE (\"Decke gegen Erdreich\"). F\u00fcr eine vollst\u00e4ndige Typisierung w\u00e4ren weitere Untertypen sinnvoll, besonders im Hinblick auf die D\u00e4mmperimeterberechnung.</p> <p>Die Sprachenwahl ist ein wichtiger Aspekt der Typisierung. Verschiedene Projektphasen und Stakeholder verwenden unterschiedliche Sprachen. Eine durchg\u00e4ngige Verwendung von Englisch w\u00e4re eine L\u00f6sung, bringt aber eigene Herausforderungen. Das entwickelte System enth\u00e4lt automatisch deutsche und englische Bezeichnungen, da die Wahl einer einzelnen Landessprache oft zum \"R\u00f6stigraben-Problem\" mit benachteiligten Sprachgruppen f\u00fchrt. F\u00fcr ein Projekt empfiehlt sich eine einheitliche Typisierungssprache.</p> Deutsch Englisch WE - Wand gegen Erdreich WE - Wall to exterior BE - Boden gegen Erdreich BE - Bottom slab to exterior","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/#bimx-anleitung","title":"BIMx Anleitung","text":"","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/#modell-offnen","title":"Modell \u00f6ffnen","text":"<p>Um ein Modell zu \u00f6ffnen, klicke beim BIMx auf Play. W\u00e4hle links eines der beiden Modelle und klicke unten auf das entsprechende Vorschaubild.</p> <p></p>","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/#bauteil-informationen","title":"Bauteil-Informationen","text":"<p>Im Typenmodell k\u00f6nnen die Bedeutungen der Farben durch einen Rechtsklick auf ein Element und Auswahl von \"Info\" angezeigt werden. Dort sind die Typisierungen in Deutsch und Englisch hinterlegt.</p> <p></p>","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/#status-beheizt","title":"Status beheizt","text":"<p>Die roten und blauen Kugeln zeigen den Heizstatus (beheizt/unbeheizt) der R\u00e4ume an. Per Rechtsklick auf \"Info\" werden Details angezeigt. Die R\u00e4ume selbst k\u00f6nnen ebenfalls eingeblendet und nach warm/kalt gefiltert werden, wie im Screenshot dargestellt.</p> <p></p>","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1003_typisierung-bauphysik/#fazit","title":"Fazit","text":"<p>Typisierung gab es schon vor BIM - bereits ein markierter Plan gruppiert Elemente. Der Vorteil des digitalen Modells liegt in der konsistenten Datenhaltung und effizienten Visualisierung, wodurch alle Projektbeteiligten ein besseres Verst\u00e4ndnis des Bauvorhabens entwickeln k\u00f6nnen.</p> <p>Ver\u00f6ffentlicht am: 2022-09-14 | Code bi100-100</p> <p>Schlagw\u00f6rter: Bauphysik, BIM, IFC, Typisierung, Workflow</p>","tags":["Bauphysik","BIM","IFC","Typisierung","Workflow"]},{"location":"BIM/bi100-1004_guid/","title":"GUID - Blobally Unique Identifier","text":"<p>Die GUID (Globally Unique Identifier) ist ein zentrales Konzept in der BIM-Welt. Ob in ArchiCAD, Revit, Allplan, Tekla, PlancalNova oder Vectorworks - beim IFC-Export spielt die GUID eine wichtige Rolle. Sie ist eine eindeutige Kennung, die jedem Element im Modell zugewiesen wird und dessen Identit\u00e4t \u00fcber den gesamten Lebenszyklus bewahrt. In diesem Video erkl\u00e4ren wir anhand eines allt\u00e4glichen Beispiels, was die GUID genau ist und warum sie f\u00fcr die BIM-Methodik unverzichtbar ist.</p> <p>Ver\u00f6ffentlicht am: 2022-07-28 | Code bi100-100</p> <p>Schlagw\u00f6rter: Archicad, BIM, GDL, GUID, IFC</p>","tags":["Archicad","BIM","GDL","GUID","IFC"]},{"location":"BIM/bi100-2000_oberflaechenmodell/","title":"Oberfl\u00e4chenmodell TWM","text":"<p>Bei der Definition von schr\u00e4gen Oberfl\u00e4chen, wie z.B. Rampen, Betondecken im Gef\u00e4lle oder schr\u00e4gen Br\u00fcstungen, ist es f\u00fcr den Austausch hilfreich, wenn ein sogenanntes Oberfl\u00e4chenmodell ausgetauscht wird. Dann arbeiten alle mit den gleichen Abzugsk\u00f6rpern und die Kongruenz der Modelle ist dadurch gew\u00e4hrleistet. (TWM - Tragwerksmodell)</p> <p></p> <p>Ver\u00f6ffentlicht am: 2022-04-04 | Code: bi100-200</p> <p>Schlagw\u00f6rter: TWM, Export, IFC, Qualitaetskontrolle, BIM, Bauingenieur</p>","tags":["TWM","Export","IFC","Qualitaetskontrolle","BIM","Bauingenieur"]},{"location":"Grasshopper/gh100-1000_grundlagen-import/","title":"Grundlagen-Import","text":"<p>Die Beschaffung und Verarbeitung von Grundlagendaten f\u00fcr Architekturstudien kann zeitaufw\u00e4ndig sein. Verschiedene Datenquellen, Formate und gro\u00dfe Datenmengen erschweren den effizienten Workflow. Mit der richtigen Methodik l\u00e4sst sich dieser Prozess jedoch deutlich vereinfachen.</p> <p>Der Schl\u00fcssel liegt darin, nur die ben\u00f6tigten Daten gezielt zu importieren und direkt am Projektnullpunkt zu positionieren. Als Grundlagen dienen:</p> <ul> <li>Kataster-DWG (LV95)</li> <li>Geb\u00e4udedaten von SwissTopo </li> <li>Terrain-XYZ-Daten von SwissTopo</li> </ul> <p>Der Workflow:</p> <ol> <li>Import des Katasters und der Geb\u00e4udedaten in Rhino</li> <li>Import der Terrain-XYZ-Daten via Grasshopper</li> <li>Verbindung aller Daten in Grasshopper</li> <li>Begrenzung auf den relevanten Bereich</li> <li>Definition des Versatzes zum Nullpunkt</li> <li>Import in ArchiCAD \u00fcber die Grasshopper-Verbindung</li> </ol> <p>Ver\u00f6ffentlicht am: 2021-12-07 | Code gh100-100</p> <p>Schlagw\u00f6rter: Archicad, Freiflaeche, Grasshopper, Rhino, Studie, Swisstopo, Terrain, Workflow, xyz</p>","tags":["Archicad","Freiflaeche","Grasshopper","Rhino","Studie","Swisstopo","Terrain","Workflow","xyz"]},{"location":"MKDocs/mk100-1000_markdown-empty/","title":"Markdown Empty","text":"","tags":["Markdown"]},{"location":"MKDocs/mk100-1000_markdown-empty/#h2-chapters","title":"h2 chapters","text":"","tags":["Markdown"]},{"location":"MKDocs/mk100-1000_markdown-empty/#h3-subchapters","title":"h3 subchapters","text":"<p>Use this template for starting a new post.</p> <p>Ver\u00f6ffentlicht am: 2024-01-17 | Code mk100-100</p> <p>Schlagw\u00f6rter: Markdown</p>","tags":["Markdown"]},{"location":"MKDocs/mk100-1001_markdown-templates/","title":"Markdown Templates","text":"<p>This template demonstrates common Markdown formatting elements and how to use them effectively in documentation.</p>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#header","title":"Header","text":"<p>Always use a header, title is used for navigation and title. Date appears in the footer and tags in the search.</p> <pre><code>---\ntitle: \"Markdown Templates\"\ndate: \"2024-01-17\"\ntags:\n  - \"Markdown\"\n  - \"Template\"\n  - \"Documentation\"\n  - \"Guide\"\n---\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#comments","title":"Comments","text":"<p>Comments are not visible.</p> <pre><code>&lt;!-- comments --&gt;\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#chapters","title":"Chapters","text":"<p># h1 not used, title will appear automatic</p>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#h2-chapters","title":"h2 chapters","text":"<pre><code>## h2 chapters\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#h3-subchapters","title":"h3 subchapters","text":"<pre><code>### h3 subchapters\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#youtube","title":"YouTube","text":"<p>Take the right embed link from youtube (only link), is connected with custom.css</p> <pre><code>&lt;div class=\"video-container\"&gt;\n  &lt;iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/cgiI8TBw9H0?si=NWXfqKQGowqPxPVR\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;\n&lt;/div&gt;\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#image","title":"Image","text":"<p>Can't select in the interface. </p> <pre><code>![Parameter](assets/example-image.svg)\n</code></pre> <p>Can select in the interface. </p> <pre><code>[![Parameter](assets/example-image.svg)](assets/example-image.svg)\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#lists","title":"Lists","text":"","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#numbered-list","title":"Numbered List","text":"<ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol> <pre><code>### Numbered List\n&lt;!-- Enter is needed for right representation --&gt;\n1. First item\n2. Second item\n3. Third item\n\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#bulleted-list","title":"Bulleted List","text":"<ul> <li>First point</li> <li>Second point</li> <li>Third point</li> </ul> <pre><code>### Bulleted List\n&lt;!-- Enter is needed for right representation --&gt;\n- First point\n- Second point\n- Third point\n\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#combined-list","title":"Combined List","text":"<ol> <li>First item<ul> <li>First point </li> <li>Second point</li> </ul> </li> <li>Second item</li> <li>Third item</li> </ol> <pre><code>### Combined List\n&lt;!-- Enter is needed for right representation --&gt;\n1. First item\n      - First point &lt;!-- indent for right representation --&gt;\n      - Second point\n2. Second item\n3. Third item\n\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#responsive-design-with-two-images","title":"Responsive Design with Two Images","text":"<pre><code>&lt;div class=\"responsive-container\"&gt; &lt;!-- defined in custom.css --&gt;\n  &lt;div&gt;\n    &lt;img src=\"assets/example-image.svg\" alt=\"Image 1\" style=\"width:100%\"&gt;\n  &lt;/div&gt;\n  &lt;div&gt;\n    &lt;img src=\"assets/example-image.svg\" alt=\"Image 2\" style=\"width:100%\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#code-block","title":"Code Block","text":"<pre><code>def hello_world():\n    print(\"Hello, world!\")\n</code></pre> <pre><code>```python\ndef hello_world():\n    print(\"Hello, world!\")```\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#table","title":"Table","text":"Header 1 Header 2 Header 3 Row 1 Data More Data Row 2 Data More Data Row 3 Data More Data <pre><code>| Header 1 | Header 2 | Header 3 |\n|----------|----------|----------|\n| Row 1    | Data     | More Data|\n| Row 2    | Data     | More Data|\n| Row 3    | Data     | More Data|\n\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#blockquote","title":"Blockquote","text":"<p>This is a blockquote. It is used to highlight a quote or a piece of text.</p> <pre><code>&gt; This is a blockquote. It is used to highlight a quote or a piece of text.\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#horizontal-line","title":"Horizontal Line","text":"<pre><code>---\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#link","title":"Link","text":"<p>Visit OpenAI</p> <pre><code>[Visit OpenAI](https://www.openai.com)\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]},{"location":"MKDocs/mk100-1001_markdown-templates/#inline-code","title":"Inline Code","text":"<p>Use the <code>print()</code> function to display output in Python.</p> <pre><code>Use the `print()` function to display output in Python.\n</code></pre> <p>Ver\u00f6ffentlicht am: 2024-01-17 | Code mk100-100</p> <p>Schlagw\u00f6rter: Markdown, Template, Documentation, Guide</p> <pre><code>**Ver\u00f6ffentlicht am:** 2024-01-17 | **Code** mk100-100\n\n**Schlagw\u00f6rter:** Markdown, Template, Documentation, Guide\n</code></pre>","tags":["Markdown","Template","Documentation","Guide"]}]}